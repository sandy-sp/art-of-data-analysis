name: Publish Docker Images

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Login to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Step 4: Login to GitHub Packages
      - name: Login to GitHub Packages
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 5: Find all projects with Dockerfiles
      - name: Find projects with Dockerfiles
        id: find-projects
        run: |
          PROJECTS=$(find projects -mindepth 1 -maxdepth 1 -type d -exec test -f '{}/Dockerfile' \; -print)
          if [ -z "$PROJECTS" ]; then
              echo "No projects with Dockerfiles found."
              exit 1
          fi
          echo "projects=$(echo \"$PROJECTS\" | jq -R -s -c 'split(\"\n\")[:-1]')" >> $GITHUB_OUTPUT
        outputs:
          projects: ${{ steps.find-projects.outputs.projects }}

      # Step 6: Debug project output
      - name: Debug project output
        run: echo "Projects: ${{ steps.find-projects.outputs.projects }}"

  build-and-push:
    needs: publish
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ${{ fromJson(needs.publish.outputs.projects) }}
    steps:
      # Step 1: Checkout the repository
      - uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Build and push Docker images
      - name: Build and push Docker images
        run: |
          set -e
          PROJECT=${{ matrix.project }}
          PROJECT_NAME=$(basename "$PROJECT")
          IMAGE_NAME_DOCKERHUB="${{ secrets.DOCKERHUB_USERNAME }}/${PROJECT_NAME}"
          IMAGE_NAME_GHCR="ghcr.io/${{ github.repository_owner }}/art-of-data-analysis/${PROJECT_NAME}"
          TAG="${GITHUB_SHA::7}"

          echo "Building Docker image for Docker Hub: $IMAGE_NAME_DOCKERHUB:$TAG"
          docker build --cache-from=type=registry,ref=${IMAGE_NAME_DOCKERHUB}:${TAG} -t ${IMAGE_NAME_DOCKERHUB}:${TAG} "$PROJECT"
          docker push ${IMAGE_NAME_DOCKERHUB}:${TAG}

          echo "Tagging and pushing Docker image to GitHub Packages: $IMAGE_NAME_GHCR:$TAG"
          docker tag ${IMAGE_NAME_DOCKERHUB}:${TAG} ${IMAGE_NAME_GHCR}:${TAG}
          docker push ${IMAGE_NAME_GHCR}:${TAG}