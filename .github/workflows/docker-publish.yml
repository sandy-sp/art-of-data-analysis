name: Publish Docker Images

on:
  push:
    branches:
      - main
    paths:
      - 'projects/**/Dockerfile'

jobs:
  publish:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.find-changed-dockerfiles.outputs.changed }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Find changed Dockerfiles
        id: find-changed-dockerfiles
        run: |
          CHANGED=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep 'projects/.*/Dockerfile' || true)
          echo "$CHANGED"
          if [ -z "$CHANGED" ]; then
            echo "changed=[]" >> "$GITHUB_OUTPUT"
          else
            CHANGED_JSON=$(echo "$CHANGED" | xargs -n1 dirname | jq -R -s -c 'split("\n")[:-1]')
            echo "changed=$CHANGED_JSON" >> "$GITHUB_OUTPUT"
          fi

  build-and-push:
    needs: publish
    if: needs.publish.outputs.changed != '[]'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: ${{ fromJson(needs.publish.outputs.changed) }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        run: |
          set -e
          PROJECT="${{ matrix.project }}"
          PROJECT_NAME=$(basename "$PROJECT")
          TAG="${GITHUB_SHA::7}"

          IMAGE_NAME_DOCKERHUB="${{ secrets.DOCKERHUB_USERNAME }}/$PROJECT_NAME"
          IMAGE_NAME_GHCR="ghcr.io/${{ github.repository_owner }}/$PROJECT_NAME"

          echo "Building Docker image: $IMAGE_NAME_DOCKERHUB:$TAG"
          docker build -t "$IMAGE_NAME_DOCKERHUB:$TAG" "$PROJECT"
          docker tag "$IMAGE_NAME_DOCKERHUB:$TAG" "$IMAGE_NAME_DOCKERHUB:latest"

          echo "Pushing to Docker Hub"
          docker push "$IMAGE_NAME_DOCKERHUB:$TAG"
          docker push "$IMAGE_NAME_DOCKERHUB:latest"

          echo "Tagging and pushing to GHCR"
          docker tag "$IMAGE_NAME_DOCKERHUB:$TAG" "$IMAGE_NAME_GHCR:$TAG"
          docker tag "$IMAGE_NAME_DOCKERHUB:latest" "$IMAGE_NAME_GHCR:latest"
          docker push "$IMAGE_NAME_GHCR:$TAG"
          docker push "$IMAGE_NAME_GHCR:latest"
